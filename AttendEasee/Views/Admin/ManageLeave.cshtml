@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

}

@model List<Leave>

<h2 class="d-flex justify-content-center"> Manage Leaves</h2>

<button class="btn btn-success" onclick="accRejLeave('Accepted')">Accept all Leaves</button>
<button class="btn btn-danger" onclick="accRejLeave('Rejected')">Reject all Leaves</button>

<table class="table">
    <thead>
        <tr>
            <th>User</th>
            <th>Status</th>
            <th>Request Date</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var leave in Model)
        {
            <tr>
                <td>@leave.User.UserName</td> <!-- Adjust this based on your User model's properties -->
                <td>@leave.LeaveStatus</td>
                <td>@leave.RequestDate.ToString("yyyy-MM-dd HH:mm:ss")</td> <!-- Format date as needed -->
                <td>
                    @if (leave.LeaveStatus == "Pending")
                    {
                        <button class="btn btn-success" onclick="updateLeave(@leave.LeaveId, 'Accepted')">Accept</button>
                        <button class="btn btn-danger" onclick="updateLeave(@leave.LeaveId, 'Rejected')">Reject</button>
                    }

                    
                </td>
            </tr>
        }
    </tbody>
</table>
@section scripts {
    <script>
        function accRejLeave(status) {
            const formData = {
                LeaveStatus: status,
            }

            console.log(formData);

            fetch(`/Admin/AcceptRejectLeave`, {
                method: "POST",
                body: JSON.stringify(formData),
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            }).then(response => {
                if (response.ok) {
                    Swal.fire({
                        title: 'Success!',
                        text: 'Update successful',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: 'Request failed',
                        icon: 'error',
                        confirmButtonText: 'Try Again'
                    });
                }
            }).catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'An error occurred: ' + error.message,
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            });
        }


        function updateLeave(leaveId, status) {
            const formData = {
                LeaveId: leaveId,
                LeaveStatus: status
            };

            console.log(formData);

            fetch(`/Admin/UpdateLeave/${leaveId}`, {
                method: "POST",
                body: JSON.stringify(formData),
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            }).then(response => {
                if (response.ok) {
                    Swal.fire({
                        title: 'Success!',
                        text: 'Leave updated successfully',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: 'Request failed',
                        icon: 'error',
                        confirmButtonText: 'Try Again'
                    });
                }
            }).catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'An error occurred: ' + error.message,
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            });
        }
    </script>
}